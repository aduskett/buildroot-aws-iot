################################################################################
#
# aws-iot-device-client
#
################################################################################

AWS_IOT_DEVICE_CLIENT_VERSION = 1.4
AWS_IOT_DEVICE_CLIENT_SITE = $(call github,awslabs,aws-iot-device-client,v$(AWS_IOT_DEVICE_CLIENT_VERSION))
AWS_IOT_DEVICE_CLIENT_LICENSE = Apache-2.0
AWS_IOT_DEVICE_CLIENT_LICENSE_FILES = LICENSE
AWS_IOT_DEVICE_CLIENT_CPE_ID_VENDOR = amazon
AWS_IOT_DEVICE_CLIENT_DEPENDENCIES += \
	aws-c-auth \
	aws-c-cal \
	aws-c-common \
	aws-c-compression \
	aws-c-event-stream \
	aws-checksums \
	aws-c-http \
	aws-c-io \
	aws-c-mqtt \
	aws-crt-cpp \
	aws-c-s3 \
	aws-iot-device-sdk-cpp-v2 \
	openssl

AWS_IOT_DEVICE_CLIENT_CONF_OPTS += \
	-DBUILD_SDK=OFF \
	-DBUILD_TEST_DEPS=OFF \
	-DDISABLE_MQTT=OFF \
	-DGIT_VERSION=OFF \
	-DCMAKE_PREFIX_PATH="$(STAGING_DIR)/usr"

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_JOBS),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_JOBS=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_JOBS=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_DD),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_DD=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_DD=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_ST),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_ST=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_ST=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_FP),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_FP=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_FP=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_SAMPLES),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_SAMPLES=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_SAMPLES=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_PUBSUB_SAMPLES),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_PUBSUB=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_PUBSUB=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_SHADOW),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_SHADOW=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_SHADOW=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_SHADOW_CONFIG),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_CONFIG_SHADOW=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_CONFIG_SHADOW=ON
endif

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_SHADOW_SAMPLES),y)
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_SAMPLE_SHADOW=OFF
else
AWS_IOT_DEVICE_CLIENT_CONF_OPTS += -DEXCLUDE_SAMPLE_SHADOW=ON
endif

define AWS_IOT_DEVICE_CLIENT_INSTALL_TARGET_CMDS
	$(INSTALL) -D -m 0755 $(@D)/aws-iot-device-client \
		$(TARGET_DIR)/sbin/aws-iot-device-client
endef

ifeq ($(BR2_PACKAGE_AWS_IOT_DEVICE_CLIENT_INSTALL_SETUP_SCRIPT),y)
define AWS_IOT_DEVICE_CLIENT_INSTALL_SETUP_SCRIPT
	$(INSTALL) -D -m 0755 $(@D)/setup.sh \
		$(TARGET_DIR)/usr/bin/aws-iot-device-client-setup
endef
AWS_IOT_DEVICE_CLIENT_POST_INSTALL_TARGET_HOOKS += AWS_IOT_DEVICE_CLIENT_INSTALL_SETUP_SCRIPT
endif

define AWS_IOT_DEVICE_CLIENT_INSTALL_INIT_SYSV
	$(INSTALL) -m 0755 -D $(AWS_IOT_DEVICE_CLIENT_PKGDIR)/S50-aws-iot-device-client \
		$(TARGET_DIR)/etc/init.d/S50-aws-iot-device-client
endef

define AWS_IOT_DEVICE_CLIENT_INSTALL_INIT_SYSTEMD
	$(INSTALL) -D -m 644 $(@D)/setup/aws-iot-device-client.service \
		$(TARGET_DIR)/usr/lib/systemd/system/aws-iot-device-client.service
endef

$(eval $(cmake-package))
