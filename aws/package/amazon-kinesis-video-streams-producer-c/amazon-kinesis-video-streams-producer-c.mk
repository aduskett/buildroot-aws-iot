################################################################################
#
# amazon-kinesis-video-streams-producer-c
#
################################################################################

AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_VERSION = 1.2.0
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_SITE = $(call github,awslabs,amazon-kinesis-video-streams-producer-c,v$(AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_VERSION))
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_LICENSE = Apache-2.0
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_LICENSE_FILES = LICENSE
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CPE_ID_VENDOR = amazon
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_INSTALL_STAGING = YES
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_DEPENDENCIES = \
	amazon-kinesis-video-streams-pic \
	jsmn \
	libcurl \
	openssl

# We manage our own dependencies
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS = \
	-DCMAKE_PREFIX_PATH="$(STAGING_DIR)/usr" \
	-DJSMN_LIBRARY="$(STAGING_DIR)/usr/include/jsmn.h" \
	-DJSMN_INCLUDE_DIRS="$(STAGING_DIR)/usr/include" \
	-DBUILD_COMMON_CURL=ON \
	-DBUILD_DEPENDENCIES=OFF \
	-DUSE_MBEDTLS=OFF \
	-DUSE_OPENSSL=ON \
	-DBUILD_OPENSSL_PLATFORM=linux

ifeq ($(BR2_STATIC_LIBS),y)
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS += -DBUILD_STATIC=ON
else ifeq ($(BR2_SHARED_LIBS),y)
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS += -DBUILD_STATIC=OFF
endif

ifeq ($(BR2_TOOLCHAIN_USES_MUSL),y)
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS += -DADD_MUCLIBC=ON
else ifeq ($(BR2_SHARED_LIBS),y)
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS += -DADD_MUCLIBC=OFF
endif

ifeq ($(BR2_PACKAGE_AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_WEBSOCKETS),y)
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_DEPENDENCIES += libwebsockets
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS += \
	-DBUILD_COMMON_LWS=ON
else
AMAZON_KINESIS_VIDEO_STREAMS_PRODUCER_C_CONF_OPTS += \
	-DBUILD_COMMON_LWS=OFF
endif

$(eval $(cmake-package))
