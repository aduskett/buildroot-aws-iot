From d541cd9646d0752415e80d1d482933f77ed67f70 Mon Sep 17 00:00:00 2001
From: Adam Duskett <Aduskett@gmail.com>
Date: Mon, 25 Jan 2021 12:58:14 -0800
Subject: [PATCH] Add option to disable tests

Tests are not desired when cross-compiling.

Signed-off-by: Adam Duskett <Aduskett@gmail.com>
---
 CMakeLists.txt | 41 +++++++++++++++++++++++++++--------------
 1 file changed, 27 insertions(+), 14 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6208b3e..3a2daa5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,6 +7,8 @@ set(AWS_TUNNEL_LOCAL_PROXY_TEST_NAME localproxytest)
 project(${AWS_TUNNEL_LOCAL_PROXY_TARGET_NAME} CXX)
 project(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} CXX)
 
+option(BUILD_TESTS "Builds the tests." ON)
+
 ######################################
 # Section : Disable in-source builds #
 ######################################
@@ -60,8 +62,9 @@ find_package(OpenSSL REQUIRED)
 #########################################
 # Test framework dependency             #
 #########################################
-#probably comment out for cross compiler as Catch2 is really just a header library
-find_package(Catch2 REQUIRED)
+if(BUILD_TESTS)
+  find_package(Catch2 REQUIRED)
+endif(BUILD_TESTS)
 
 #########################################
 # Boost dependencies                    #
@@ -80,20 +83,27 @@ endforeach()
 # Target : Build aws-tunnel-local-proxy #
 #########################################
 file(GLOB ALL_SOURCES ${PROJECT_SOURCE_DIR}/src/*.cpp)
-file(GLOB TEST_CODE ${PROJECT_SOURCE_DIR}/test/*.cpp)
+if(BUILD_TESTS)
+  file(GLOB TEST_CODE ${PROJECT_SOURCE_DIR}/test/*.cpp)
+endif(BUILD_TESTS)
 
 set(UTIL_SOURCE ${PROJECT_SOURCE_DIR}/src/config/ConfigFile.cpp ${PROJECT_SOURCE_DIR}/src/Url.cpp)
 set(CORE_SOURCES ${PROJECT_SOURCE_DIR}/src/TcpAdapterProxy.cpp ${PROJECT_SOURCE_DIR}/src/ProxySettings.cpp ${PROJECT_SOURCE_DIR}/src/WebProxyAdapter.cpp ${PROTO_HDRS} ${PROTO_SRCS} ${PROJECT_SOURCE_DIR}/src/WebSocketStream.cpp)
 set(MAIN_SOURCES ${PROJECT_SOURCE_DIR}/src/main.cpp ${CORE_SOURCES} ${UTIL_SOURCE})
-set(TEST_SOURCES ${TEST_CODE} ${CORE_SOURCES} ${UTIL_SOURCE})
+if(BUILD_TESTS)
+  set(TEST_SOURCES ${TEST_CODE} ${CORE_SOURCES} ${UTIL_SOURCE})
+endif(BUILD_TESTS)
 
 add_executable(${AWS_TUNNEL_LOCAL_PROXY_TARGET_NAME} ${MAIN_SOURCES})
-add_executable(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${TEST_SOURCES})
-
+if(BUILD_TESTS)
+  add_executable(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${TEST_SOURCES})
+endif(BUILD_TESTS)
 #libatomic ensured for all platforms except OSX and WINDOWS
 if(NOT APPLE AND NOT MSVC)
     target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TARGET_NAME} atomic)
-    target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} atomic)
+    if(BUILD_TESTS)
+      target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} atomic)
+    endif(BUILD_TESTS)
 endif()
 
 target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TARGET_NAME} ${CMAKE_THREAD_LIBS_INIT})
@@ -104,12 +114,15 @@ target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TARGET_NAME} ${Protobuf_LITE_STAT
 
 
 include_directories(${PROJECT_SOURCE_DIR}/src)
-target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${CMAKE_THREAD_LIBS_INIT})
-target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} OpenSSL::SSL)
-target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} OpenSSL::Crypto)
-target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${Boost_STATIC_LIBRARIES})
-target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${Protobuf_LITE_STATIC_LIBRARY})
-
+if(BUILD_TESTS)
+  target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${CMAKE_THREAD_LIBS_INIT})
+  target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} OpenSSL::SSL)
+  target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} OpenSSL::Crypto)
+  target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${Boost_STATIC_LIBRARIES})
+  target_link_libraries(${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} ${Protobuf_LITE_STATIC_LIBRARY})
+endif(BUILD_TESTS)
 
 set_property(TARGET ${AWS_TUNNEL_LOCAL_PROXY_TARGET_NAME} APPEND_STRING PROPERTY COMPILE_FLAGS ${CUSTOM_COMPILER_FLAGS})
-set_property(TARGET ${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} APPEND_STRING PROPERTY COMPILE_FLAGS ${TEST_COMPILER_FLAGS})
+if(BUILD_TESTS)
+  set_property(TARGET ${AWS_TUNNEL_LOCAL_PROXY_TEST_NAME} APPEND_STRING PROPERTY COMPILE_FLAGS ${TEST_COMPILER_FLAGS})
+endif(BUILD_TESTS)
-- 
2.32.0

